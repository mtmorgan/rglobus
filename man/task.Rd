% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/task.R
\name{task_status}
\alias{task_status}
\alias{task_cancel}
\alias{task_list}
\title{Task management}
\usage{
task_status(.data, all_fields = FALSE)

task_cancel(.data)

task_list(filter = "", orderby = "request_time DESC", all_fields = FALSE)
}
\arguments{
\item{.data}{a \code{tibble} with column \code{task_id}, as returned by
\code{copy()} or \code{transfer()}.}

\item{all_fields}{\code{logical(1)} indicating whether abbreviated or
detailed information about the task status should be returned}

\item{filter}{character(1) query parameter restricting which tasks
are returned by \code{task_list()}. See details.}

\item{orderby}{character(1) task list ordering; the default places
the most recently requested task at the top.}
}
\value{
\code{task_status()} and \code{task_list()} return a \code{tibble} summarizing the
status of the task(s). The meaning of each column is described in the
Globus documentation at

\url{https://docs.globus.org/api/transfer/task/#task_document}

With the default value \code{all_fields = FALSE}, the \code{tibble}
contains columns
\itemize{
\item \code{task_id}: the id of the task.
\item \code{status}: one of \code{ACTIVE}, \code{INACTIVE}, \code{SUCCEEDED} or \code{FAILED}.
\item \code{type}: one of \code{TRANSFER} or \code{DELETE}.
\item \code{nice_status}: \code{NULL} for a completed task; \code{OK} or \code{Queued}
tasks proceeding normally; or an indication of the reason for
\code{ACTIVE} or \code{INACTIVE} failure. Examples of \code{nice_status}
indicating transient failure include: \code{PERMISSION_DENIED} if the
user does not currently have access to the source or destination
resource; \code{CONNECT_FAILED} if the Globus Connect Personal client
is not currently on-line; \code{GC_PAUSED} if the client is paused.
}

\code{task_cancel()} returns its input argument, invisibly.
}
\description{
\code{task_status()} retrieves the status of a task
started by \code{copy()} or \code{transfer()}.

\code{task_cancel()} cancels a task started with
\code{copy()} or \code{transfer()}.

\code{task_list()} retrieves information on all tasks
submitted by the user.
}
\details{
The input to \code{task_status()} is usually the return value from
\code{copy()} or \code{transfer()}.

\code{task_cancel()} prints a message indicating successful
submission of the task cancellation operation.

For \code{task_list()}, the \code{filter} and \code{orderby} syntax is described at

\url{https://docs.globus.org/api/transfer/task/#filter_and_order_by_options}

A simple task list filter is to return all 'ACTIVE' tasks, with \code{filter = "status:ACTIVE"}.
}
\examples{
if (exists("task")) {
    ## check transfer task status
    task_status <- task_status(task)
    print(task_status)

    ## tasks that are failing need to be cancelled
    status <- pull(task_status, "status")
    nice_status <- pull(task_status, "nice_status")
    cancel <-
        ## task has failed, or...
        identical(status, "FAILED") ||
        ## ...something's gone wrong
        (!is.null(nice_status) && !nice_status \%in\% c("OK", "Queued"))
    if (cancel)
        task_cancel(task)
}

task_list()

}
